import { z } from 'zod'

export const DailyPostersSchema = z.array(
  z.object({
    id: z.number(),
    title: z.object({ rendered: z.string() }),
    _links: z.object({
      _embedded: z.object({
        'wp:featuredmedia': z.array(
          z.object({
            id: z.number(),
            date: z.string(),
            slug: z.string(),
            type: z.string(),
            link: z.string(),
            title: z.object({ rendered: z.string() }),
            author: z.number(),
            acf: z.array(z.unknown()),
            caption: z.object({ rendered: z.string() }),
            alt_text: z.string(),
            media_type: z.string(),
            mime_type: z.string(),
            media_details: z.object({
              width: z.number(),
              height: z.number(),
              file: z.string(),
              filesize: z.number(),
              sizes: z.object({
                medium: z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  filesize: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
                large: z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  filesize: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
                thumbnail: z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  filesize: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
                medium_large: z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  filesize: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
                '1536x1536': z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  filesize: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
                '2048x2048': z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  filesize: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
                full: z.object({
                  file: z.string(),
                  width: z.number(),
                  height: z.number(),
                  mime_type: z.string(),
                  source_url: z.string(),
                }),
              }),
              image_meta: z.object({
                aperture: z.string(),
                credit: z.string(),
                camera: z.string(),
                caption: z.string(),
                created_timestamp: z.string(),
                copyright: z.string(),
                focal_length: z.string(),
                iso: z.string(),
                shutter_speed: z.string(),
                title: z.string(),
                orientation: z.string(),
                keywords: z.array(z.unknown()),
              }),
            }),
            source_url: z.string(),
            _links: z.object({
              self: z.array(z.object({ href: z.string() })),
              collection: z.array(z.object({ href: z.string() })),
              about: z.array(z.object({ href: z.string() })),
              author: z.array(
                z.object({ embeddable: z.boolean(), href: z.string() }),
              ),
              replies: z.array(
                z.object({ embeddable: z.boolean(), href: z.string() }),
              ),
            }),
          }),
        ),
      }),
    }),
  }),
)
