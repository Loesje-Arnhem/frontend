name: ci

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [lts/*]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache node_modules 📦
        uses: actions/cache@v3.0.10
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci --prefer-offline --no-audit --force

      - name: Generate
        run: npm run generate

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT}} -H ${{ secrets.HOST }}  >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./dist/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/loesjenl/frontend/public_html/test/
# name: Node.js CI/CD

# on:
#   # Trigger the workflow on push or pull request,
#   # but only for the main branch
#   push:
#     branches:
#       - master

# jobs:

#   deploy:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
#     steps:
#       - name: Deploying to Server
#         uses: appleboy/ssh-action@master # An action made to control Linux servers
#         with: # We set all our secrets here for the action, these won't be shown in the action logs
#           username: ${{ secrets.USERNAME }}
#           password: ${{ secrets.PASSWORD }}
#           host: ${{ secrets.HOST }}
#           command_timeout: 200m
# #           key: ${{ secrets.SSH }}
#           script: |
#             cd ./frontend # we move into our app's folder
#             git pull # we pull any changes from git
#             npm prune # we remove any unused dependencies
#             npm ci # we install any missing dependencies
#             ## npm run build
#             ## pm2 reload all # we reload the app via PM2
#             npm run generate
#             rsync -a --delete ./dist/ ./public_html/
