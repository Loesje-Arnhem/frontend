name: Node.js CI/CD

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master

jobs:
 
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploying to Server
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          host: ${{ secrets.HOST }} 
#           key: ${{ secrets.SSH }}
          script: |
            cd ./frontend # we move into our app's folder
            git pull # we pull any changes from git
            npm prune # we remove any unused dependencies
            npm ci # we install any missing dependencies
            npm run generate
            pm2 reload all # we reload the app via PM2
  lighthouse:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:

      - uses: actions/checkout@v2
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v9
        with:
          # List of URL(s) to analyze
#        configPath: './lighthouserc.json'
          urls: https://test.loesje.nl
          # Path to a Lighthouse budgets.json file
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
