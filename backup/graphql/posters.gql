fragment PosterBase on Poster {
  id
  databaseId
  title
}

fragment Poster on Poster {
  ...PosterBase
  uri
  slug
  featuredImage {
    ...FeaturedImage
  }
}

fragment RelatedPosterNode on ContentNodeToPosterConnectionEdge {
  node {
    ...Poster
  }
}

fragment RelatedPosters on ContentNodeToPosterConnection {
  edges {
    ...RelatedPosterNode
  }
}

fragment PosterRelatedProduct on Poster_Relatedproductsgroup_relatedProductsProducts_Product {
  ...Product
}

fragment PosterRelatedProductNode on Poster_Relatedproductsgroup_relatedProductsProducts {
    ... on Poster_Relatedproductsgroup_relatedProductsProducts {
    product {
      ...PosterRelatedProduct
    }
  }
}

fragment PosterRelatedProducts on Poster_Relatedproductsgroup {
  title: relatedProductsTitle
  products: relatedProductsProducts {
    ...PosterRelatedProductNode
  }
}

fragment PosterDetails on Poster {
  ...PosterBase
  slug
  date
  uri
  link
  featuredImage {
    ...FeaturedImage
  }
  PosterMetaGroup {
    date
    pdf {
      mediaItemUrl
    }
  }
  sources {
    ...Sources
  }
  subjects {
    ...Subjects
  }
  seo {
    ...seo
  } 
  relatedProducts: relatedProductsGroup {
    ...PosterRelatedProducts
  }      
}

fragment PosterNode on RootQueryToPosterConnectionEdge {
  node {
    ...Poster
  }
}

fragment Posters on RootQueryToPosterConnection {
  edges {
    ...PosterNode
  }
}

query GetPoster($slug: ID!) {
  poster(id: $slug, idType: SLUG) {
    ...PosterDetails
    # relatedProducts: relatedProductsGroup {
    #   ...posterRelatedProducts
    # }


    # seo {
    #   ...seo
    # }
  }
}

query SearchPoster($search: String) {
  posters(where: { search: $search }, first: 10) {
    edges {
      node {
        ...PosterBase
        slug
      }
    }
  }
}

query GetPosters(
  $after: String
  $where: RootQueryToPosterConnectionWhereArgs
) {
  posters(first: 20, after: $after, where: $where) {
    pageInfo {
      hasNextPage
      endCursor
      hasPreviousPage
      startCursor
    }
    ...Posters
  }
}
query GetDailyPoster($year: Int, $month: Int, $day: Int) {
  dailyPosters(
    first: 1
    where: { posterDateEquals: { year: $year, month: $month, day: $day } }
  ) {
    edges {
      node {
        title
        featuredImage {
          ...FeaturedImage
        }
      }
    }
  }
}
